args:
- name: email
  required: true
commonfields:
  id: e9b802c0-a19b-4c32-8ac7-4a8d430f647c
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.9.42476
enabled: true
engineinfo: {}
mainengineinfo: {}
name: AlexMontminyADGetUserAndManager
pswd: ""
runas: DBotWeakRole
runonce: false
script: |-
  # Retrieves a command / cript arguments dict, and then we can "get" the argument from that dict
  email = demisto.args().get("email")
  #print(email)

  user = demisto.executeCommand("ad-get-user", {"email": email})

  user = user[0].get("Contents")

  #manager = demisto.executeCommand("ad-get-user", {"dn": user.get("attributes").get("manager")[0]})[0]["Contents"]
  #print(manager)

  result = {
      "UserName": user.get('attributes').get('displayName')[0],
      "UserEmail": user.get('attributes').get('mail')[0],
      "UserGroups": user.get('attributes').get('memberOf'),
      "UserSamAccountName": user.get('attributes').get('sAMAccountName')[0]
  }

  readable = tableToMarkdown("Active Directory User Details", result, headers=["UserName", "UserEmail", "UserGroups", "UserSamAccountName"])

  results = CommandResults(
          readable_output=readable,
          outputs_prefix='ADUserAndManager',
          outputs_key_field="UserName",
          outputs=result,
          ignore_auto_extract=True
      )

  return_results(results)
scripttarget: 0
subtype: python3
tags: []
type: python
