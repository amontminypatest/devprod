contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.0.3
    packID: WindowsForensics
    packName: Windows Forensics
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: This playbook allows the user to analyze forensic evidence acquired from
  a host, such as registry files and PCAP files.
id: Forensics Tools Analysis
inputs:
- description: The entryid for the PCAP file to analyze.
  key: PcapEntryID
  playbookInputQuery: null
  required: false
  value: {}
- description: The entryid for the registry file to analyze.
  key: RegistryEntryId
  playbookInputQuery: null
  required: false
  value: {}
name: Forensics Tools Analysis
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
      - "6"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: acce8559-139e-4003-85dd-c85838101584
      iscommand: false
      name: ""
      version: -1
    taskid: acce8559-139e-4003-85dd-c85838101584
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 450,
          "y": -330
        }
      }
  "1":
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    scriptarguments:
      RegistryData:
        simple: All
      RegistryFileEntryID:
        simple: ${inputs.RegistryEntryId}
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: This playbook leverages the Registry Parse automation to perform
        registry analysis and extract forensic artifacts. The automation includes
        common registry objects to extract which are useful for analyzing a registry
        or a user provides registry path to parse.
      id: 3c8917c3-3fd7-4042-8a9d-7702e13239c1
      iscommand: false
      name: Registry Parse Data Analysis
      playbookId: Registry Parse Data Analysis
      type: playbook
      version: -1
    taskid: 3c8917c3-3fd7-4042-8a9d-7702e13239c1
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -200,
          "y": 250
        }
      }
  "4":
    continueonerrortype: ""
    id: "4"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 81cf33ce-5720-4545-81e4-bf8617668511
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 81cf33ce-5720-4545-81e4-bf8617668511
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 450,
          "y": 450
        }
      }
  "5":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.PcapEntryID
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d9314b03-bd13-42f6-8ee4-e9ec0948e236
      iscommand: false
      name: Is there a PCAP file to analyze?
      type: condition
      version: -1
    taskid: d9314b03-bd13-42f6-8ee4-e9ec0948e236
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 840,
          "y": -150
        }
      }
  "6":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.RegistryEntryId
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "6"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "10"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 85e48460-6d6f-423f-8bfe-1e691ebfe3b2
      iscommand: false
      name: Is there a registry file to analyze?
      type: condition
      version: -1
    taskid: 85e48460-6d6f-423f-8bfe-1e691ebfe3b2
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 70,
          "y": -150
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    scriptarguments:
      PcapFileEntryID:
        simple: ${inputs.PcapEntryID}
      QueryOperator:
        simple: and
      RsaDecryptKeyEntryID:
        complex:
          accessor: EntryID
          filters:
          - - left:
                iscontext: true
                value:
                  simple: File.Name
              operator: inList
              right:
                iscontext: true
                value:
                  simple: incident.pcapencryptionkey.name
            - left:
                iscontext: true
                value:
                  simple: File.Extension
              operator: isEqualString
              right:
                value:
                  simple: key
          root: File
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: This playbook is used to parse and search within PCAP files. Supported
        file types are pcap, cap, pcapng. The playbook can handle one PCAP file per
        incident. The user inputs which objects the playbook should search for in
        the PCAP. The values to search are IP addresses, CIDR ranges, and TCP or UDP
        ports or protocols. In the event that more than one input type was specified,
        specify in the QueryOperator input (such as IP addresses and TCP ports) if
        the PCAP filter query will use an AND or an OR operator between the inputs.  Another
        option is to use advanced filters just like in Wireshark to use refined filters
        or for objects not specified in other inputs. Additional inputs allow the
        user to provide the WPA password for decrypting 802.11 (wireless) traffic
        and adding an RSA certificate to decrypt SSL traffic. To display the results
        within the relevant incident fields, the playbook needs to run in a PCAP Analysis
        incident type. For handling of PCAP files larger than 30 MB, refer to the
        PcapMinerV2 documentation.
      id: 409db5ba-ecff-46f7-8f20-0348efa7600c
      iscommand: false
      name: PCAP Search
      playbookName: PCAP Search
      type: playbook
      version: -1
    taskid: 409db5ba-ecff-46f7-8f20-0348efa7600c
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 1120,
          "y": 250
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "4"
      - "8"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 41788e56-5404-4ac0-8daf-99c7ea845fcb
      iscommand: false
      name: PCAP Analysis
      type: title
      version: -1
    taskid: 41788e56-5404-4ac0-8daf-99c7ea845fcb
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 960,
          "y": 80
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "4"
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 79705b63-e6e5-42f6-847c-09dcca2037cd
      iscommand: false
      name: Registry Analysis
      type: title
      version: -1
    taskid: 79705b63-e6e5-42f6-847c-09dcca2037cd
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -40,
          "y": 80
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "6_10_yes": 0.64
    },
    "paper": {
      "dimensions": {
        "height": 845,
        "width": 1700,
        "x": -200,
        "y": -330
      }
    }
  }
