args:
- description: The number of CVEs.
  name: CvesCount
- description: The number of trending CVEs.
  name: TrendingCvesCount
comment: 'Display bar chart based on cves count and trending cves count with the different
  colors. '
commonfields:
  id: DisplayCVEChartScript
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.0.10
    packID: RiskSense
    packName: RiskSense
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.9.7.24076
engineinfo: {}
mainengineinfo: {}
name: DisplayCVEChartScript
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('DisplayCVEChartScript', 'start', __line__())

  from typing import Dict, Any


  def display_cve_chart() -> Dict[str, Any]:
      cves_count = demisto.args().get('CvesCount', 0)
      trending_cves_count = demisto.args().get('TrendingCvesCount', 0)

      entry_result = {
          "Type": 17,
          "ContentsFormat": "bar",
          "Contents": {
              "stats": [
                  {
                      "data": [
                          cves_count,
                      ],
                      "name": "CVEs that have ransomware threat",
                      "label": "CVEs that have ransomware threat",
                      "color": "rgb(0, 0, 255)"
                  },
                  {
                      "data": [
                          trending_cves_count
                      ],
                      "name": "CVEs that are ransomware trending",
                      "label": "CVEs that are ransomware trending",
                      "color": "rgb(255, 0, 0)"
                  },
              ],
              "params": {
                  "layout": "horizontal"
              }
          }
      }
      return entry_result


  def main() -> None:
      entry_result = display_cve_chart()
      demisto.results(entry_result)


  if __name__ == "__builtin__" or __name__ == "builtins":
      main()

  register_module_line('DisplayCVEChartScript', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- RiskSense
type: python
