args:
- name: indicator
- description: 'Reason to remove from the block list. '
  name: reason
  required: true
- auto: PREDEFINED
  description: Select the reputation to set for this indicator.  Selecting Recalculate
    will calculate the new reputation based on current threat intel sources.
  name: reputation
  predefined:
  - Recalculate
  - None
  - Good
  - Suspicious
  - Bad
  required: true
comment: Removes the approved_block tags from an indicator, and resets the reputation.
commonfields:
  id: ecb8a4a4-ef10-4bbb-8f9f-da12a6ec5096
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dependson:
  must:
  - Demisto REST API|||demisto-api-post
dockerimage: demisto/python3:3.8.2.6981
enabled: true
engineinfo: {}
mainengineinfo: {}
name: RemoveIndicatorBlockTags
pswd: ""
runas: DBotWeakRole
runonce: false
script: |-
  # remove block or watch tags if present
  remove_tags = 'approved_block,quick_block'

  # magic
  indicator = demisto.args().get("indicator").get("Name")
  indicator_id = demisto.args().get("indicator").get("id")
  indicator_type = demisto.args().get("indicator").get("Type")
  reputation = demisto.args().get("reputation","Recalculate")
  reputation_map = {
      "0":"None",
      "1":"Good",
      "2":"Suspicious",
      "3":"Bad"
  }

  # remove the tags
  demisto.executeCommand("removeIndicatorField", {"indicatorsValues": indicator, "field": "tags", "fieldValue": remove_tags})

  # recalculate the score or set based on the selected value:
  if reputation == "Recalculate":
      recalculate = {"value":indicator,"type":indicator_type}
      response = demisto.executeCommand("demisto-api-post", {"uri":"/indicator/reputation/calculate","body":recalculate})[0]["Contents"]["response"]
      reputation = reputation_map.get(str(response),"0")

  demisto.executeCommand("setIndicator", {"id":indicator_id,"reputation":reputation})

  # add the reason as a comment to the indicator
  comment = demisto.args().get('reason')
  comment = {"indicatorId":indicator_id,"content":comment}
  demisto.executeCommand("demisto-api-post", {"uri":"/indicator/comment","body":comment})

  demisto.results(f"Indicator {indicator} tags for block removed, and reputation set to {reputation}")
scripttarget: 0
subtype: python3
tags:
- indicator-action-button
- training
type: python
