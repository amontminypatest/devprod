comment: 'Returns the engine status for engines on the server into the Engines key
  in context. '
commonfields:
  id: 0e81569d-2fa6-4883-8ef9-5a1a2cc50fc5
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dependson:
  must:
  - Demisto REST API|||demisto-api-get
dockerimage: demisto/python3:3.9.1.15759
enabled: true
engineinfo: {}
mainengineinfo: {}
name: EngineStatusCheck
pswd: ""
runas: DBotWeakRole
runonce: false
script: |-
  engines = demisto.executeCommand("demisto-api-get", {"uri":"/engines"})[0].get('Contents',{}).get('response',{}).get('engines',[])

  data = []
  for engine in engines:
      temp = {}
      temp['Name'] = engine.get('name')
      temp['Connected'] = str(engine.get('connected'))
      temp['LastSeen'] = str(engine.get('lastSeen'))
      data.append(temp)
  readable = tableToMarkdown("Engine Status", data, headers=['Name','Connected','LastSeen'])

  if not engines:
      demisto.results("No engines configured on this server")
  else:
      results = CommandResults(outputs_prefix="Engines",outputs_key_field="Name",outputs=data,readable_output=readable)
      return_results(results)
scripttarget: 0
subtype: python3
tags:
- training
- Utility
type: python
