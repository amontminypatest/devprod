{
	"author": "Cortex XSOAR",
	"authorImage": "content/packs/Base/Author_image.png",
	"beta": false,
	"cacheVersn": 0,
	"categories": [
		"Network Security"
	],
	"certification": "certified",
	"contentItemTypes": [
		"integration",
		"incidentfield",
		"incidenttype",
		"classifier",
		"layoutscontainer"
	],
	"contentItems": {
		"automation": null,
		"classifier": [
			{
				"description": "Classifies FireEye NX Incidents.",
				"id": "",
				"name": "FireEye NX - Classifier"
			},
			{
				"description": "Maps incoming FireEye NX incident fields.",
				"id": "",
				"name": "FireEye NX Incoming Mapper"
			}
		],
		"dashboard": null,
		"genericfield": null,
		"generictype": null,
		"incidentfield": [
			{
				"description": "Source MAC address of alert.",
				"name": "FireEye NX Alert Victim MAC Address",
				"type": "shortText"
			},
			{
				"description": "Source IP of the alert.",
				"name": "FireEye NX Alert Victim IP",
				"type": "shortText"
			},
			{
				"description": "Source MAC Address of the event.",
				"name": "FireEye NX Event Source MAC Address",
				"type": "shortText"
			},
			{
				"description": "Destination MAC address of alert.",
				"name": "FireEye NX Alert Target MAC Address",
				"type": "shortText"
			},
			{
				"description": "Action of the alert.",
				"name": "FireEye NX Alert Action",
				"type": "shortText"
			},
			{
				"description": "Destination Port address of alert.",
				"name": "FireEye NX Alert Target Port",
				"type": "shortText"
			},
			{
				"description": "Source Port of the event.",
				"name": "FireEye NX Event Victim Port",
				"type": "shortText"
			},
			{
				"description": "Destination MAC Address of the event.",
				"name": "FireEye NX Event Destination MAC Address",
				"type": "shortText"
			},
			{
				"description": "Malware Name of the alert.",
				"name": "FireEye NX Alert Malware Name",
				"type": "shortText"
			},
			{
				"description": "Rule of the event.",
				"name": "FireEye NX Event Rule",
				"type": "shortText"
			},
			{
				"description": "Destination IP of the event.",
				"name": "FireEye NX Event Attacker IP",
				"type": "shortText"
			},
			{
				"description": "Destination Port of the event.",
				"name": "FireEye NX Event Destination Port",
				"type": "shortText"
			},
			{
				"description": "URL of alert.",
				"name": "FireEye NX Alert URL",
				"type": "url"
			},
			{
				"description": "The type of the alert.",
				"name": "FireEye NX Alert Type",
				"type": "singleSelect"
			},
			{
				"description": "Source IP of the event.",
				"name": "FireEye NX Event Victim IP",
				"type": "shortText"
			},
			{
				"description": "SC Version of the alert.",
				"name": "FireEye NX Alert SC Version",
				"type": "shortText"
			},
			{
				"description": "Source Port Address of the alert.",
				"name": "FireEye NX Alert Victim Port",
				"type": "shortText"
			},
			{
				"description": "CVE ID of the event.",
				"name": "FireEye NX Event CVE ID",
				"type": "shortText"
			},
			{
				"description": "UUID of the alert.",
				"name": "FireEye NX Alert UUID",
				"type": "shortText"
			},
			{
				"description": "Destination IP address of alert.",
				"name": "FireEye NX Alert Target IP",
				"type": "shortText"
			},
			{
				"description": "ID of the event.",
				"name": "FireEye NX Event ID",
				"type": "number"
			},
			{
				"description": "ID of the alert.",
				"name": "FireEye NX Alert ID",
				"type": "number"
			}
		],
		"incidenttype": [
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "FireEye NX IPS Event",
				"playbook": "",
				"weeks": 0
			},
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "FireEye NX Alert",
				"playbook": "",
				"weeks": 0
			}
		],
		"indicatorfield": null,
		"integration": [
			{
				"category": "Network Security",
				"commands": [
					{
						"description": "Gets malware artifacts metadata for the specified UUID.",
						"name": "fireeye-nx-get-artifacts-metadata-by-alert"
					},
					{
						"description": "Returns reports on selected alerts by specifying a time_frame value or a start_time and end_time of the search range.",
						"name": "fireeye-nx-get-reports"
					},
					{
						"description": "Search and retrieve FireEye alerts based on several filters.",
						"name": "fireeye-nx-get-alerts"
					},
					{
						"description": "Downloads malware artifacts data for the specified UUID as a zip file.",
						"name": "fireeye-nx-get-artifacts-by-alert"
					},
					{
						"description": "Search and retrieve FireEye events based on several filters.",
						"name": "fireeye-nx-get-events"
					}
				],
				"description": "FireEye Network Security is an effective cyber threat protection solution that helps organizations minimize the risk of costly breaches by accurately detecting and immediately stopping advanced, targeted, and other evasive attacks hiding in internet traffic.",
				"id": "",
				"name": "FireEye NX"
			}
		],
		"layoutscontainer": [
			{
				"description": "FireEye NX Alert Layout",
				"name": "FireEye NX Alert"
			},
			{
				"description": "FireEye NX IPS Event Layout",
				"name": "FireEye NX IPS Event"
			}
		],
		"list": null,
		"playbook": null,
		"report": null,
		"reputation": null,
		"widget": null,
		"wizard": null
	},
	"created": "2020-11-09T18:48:38Z",
	"currentVersion": "1.1.12",
	"definitionId": "",
	"dependencies": {
		"Base": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.31.39",
			"name": "Base"
		},
		"CommonTypes": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "3.3.34",
			"name": "Common Types"
		},
		"FireEyeCommonFields": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.0.5",
			"name": "FireEye Common Fields"
		},
		"GoogleChronicleBackstory": {
			"author": "Chronicle",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "2.1.0",
			"name": "Chronicle"
		},
		"NIST": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.0.7",
			"name": "NIST"
		},
		"PaloAltoNetworks_IoT": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.0.16",
			"name": "IoT by Palo Alto Networks"
		},
		"Phishing": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "3.3.10",
			"name": "Phishing"
		},
		"SANS": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.1.2",
			"name": "SANS"
		}
	},
	"deprecated": false,
	"description": "FireEye Network Security is an effective cyber threat protection solution that helps organizations minimize the risk of costly breaches by accurately detecting and immediately stopping advanced, targeted, and other evasive attacks hiding in Internet traffic.",
	"disabledMonthly": false,
	"downloads": 2184,
	"eulaLink": "https://github.com/demisto/content/blob/master/LICENSE",
	"fromServerVersion": "5.0.0",
	"general": [
		"generalFieldCertified",
		"generalFieldByCortexXSOAR",
		"generalFieldFree",
		"generalFieldSupportIncluded"
	],
	"id": "FireEyeNX",
	"installMessage": "",
	"integrations": [
		{
			"imagePath": "content/packs/FireEyeNX/FireEyeNX_image.png",
			"name": "FireEye NX"
		},
		{
			"imagePath": "content/packs/GoogleChronicleBackstory/GoogleChronicleBackstory_image.png",
			"name": "Chronicle"
		},
		{
			"imagePath": "content/packs/PaloAltoNetworks_IoT/PaloAltoNetworksIoT_image.png",
			"name": "Palo Alto Networks IoT"
		}
	],
	"itemVersion": "1.1.12",
	"keywords": [],
	"legacy": true,
	"name": "FireEye Network Security (NX)",
	"packID": "FireEyeNX",
	"packName": "",
	"premium": false,
	"previewOnly": false,
	"price": 0,
	"propagationLabels": [
		"all"
	],
	"rawKeywords": null,
	"rawTags": null,
	"rawUseCases": null,
	"readme": "This pack includes XSIAM content.\n\n## How configure Rsyslog on FireEye\n\n1. Log into the FireEye appliance with an administrator account.\n2. Click **Settings**.\n3. Click **Notifications**.\n4. Click **rsyslog**.\n5. Check the *Event type* checkbox.\n6. Make sure *Rsyslog* settings are:\n   - Default format: CEF\n   - Default delivery: Per event \n   - Default send as: Alert\n\n## Collect Events from Vendor\n\nIn order to use the collector, you can use one of the following options to collect events from the vendor:\n- [Broker VM](#broker-vm)\n\nIn either option, you will need to configure the vendor and product for this specific collector.\n\n### Broker VM\nYou will need to use the information described [here](https://docs.paloaltonetworks.com/cortex/cortex-xdr/cortex-xdr-pro-admin/broker-vm/set-up-broker-vm/configure-your-broker-vm).\\\nYou can configure the specific vendor and product for this instance.\n1. Navigate to **Settings** \u003e **Configuration** \u003e **Data Broker** \u003e **Broker VMs**.\n2. Right-click, and select **Syslog Collector** \u003e **Configure**.\n3. When configuring the Syslog Collector, set:\n    - vendor as FireEye\n    - product as mps\n",
	"searchRank": 10,
	"serverMaxVersion": "",
	"serverMinVersion": "5.0.0",
	"support": "xsoar",
	"supportDetails": {
		"email": "",
		"url": "https://www.paloaltonetworks.com/cortex"
	},
	"tags": [],
	"toServerVersion": "",
	"updated": "2022-12-02T00:09:41Z",
	"useCases": [],
	"version": -1,
	"versionInfo": "4137548",
	"videos": []
}