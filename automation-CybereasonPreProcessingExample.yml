comment: |-
  Preprocessing script to run when fetching Cybereason malops.
  Will check if malop was already fetched, and will then update the existing incident, otherwise will create a new incident.
commonfields:
  id: CybereasonPreProcessingExample
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 2.1.0
    packID: Cybereason
    packName: Cybereason
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.9.42476
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CybereasonPreProcessingExample
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('CybereasonPreProcessingExample', 'start', __line__())




  def get_guid_from_system_incident(incident: dict[str, Any]) -> str:
      malop_guid = ''
      for label in incident['labels']:
          if label['type'] == 'guidString':
              malop_guid = label['value']
              break
      return malop_guid


  res = True
  incident = demisto.incidents()[0]
  malop_guid = get_guid_from_system_incident(incident)

  response = demisto.executeCommand('getIncidents', {'query': '-status:Closed and malopguid: {}'.format(malop_guid)})
  malop_incident = response[0]['Contents']['data']

  if malop_incident:
      # Malop was already fetched - updating the relevant incident
      res = False
      malop_incident = malop_incident[0]
      incident['id'] = malop_incident['id']
      demisto.executeCommand('setIncident', incident)

  CommandResults(raw_response=res)

  register_module_line('CybereasonPreProcessingExample', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- preProcessing
- Cybereason
- example
type: python
